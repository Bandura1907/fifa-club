{
	"id": "197b0ffb72eec320103f944d51ab4be7",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.15",
	"solcLongVersion": "0.8.15+commit.e14f2714",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/test/Test2.sol": {
				"content": "pragma solidity >=0.8.0;\n\n\n\ncontract Test2 {\n\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/test/Test2.sol": {
				"Test2": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/test/Test2.sol\":28:47  contract Test2 {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/test/Test2.sol\":28:47  contract Test2 {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122038d6b0f6b7b65618a90e6308260ea7f42002bef3c5378071f0aba879142b1bc164736f6c634300080f0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea264697066735822122038d6b0f6b7b65618a90e6308260ea7f42002bef3c5378071f0aba879142b1bc164736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODESIZE 0xD6 0xB0 0xF6 0xB7 0xB6 JUMP XOR 0xA9 0xE PUSH4 0x8260EA7 DELEGATECALL KECCAK256 MUL 0xBE RETURN 0xC5 CALLDATACOPY DUP1 PUSH18 0xF0ABA879142B1BC164736F6C634300080F00 CALLER ",
							"sourceMap": "28:19:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea264697066735822122038d6b0f6b7b65618a90e6308260ea7f42002bef3c5378071f0aba879142b1bc164736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODESIZE 0xD6 0xB0 0xF6 0xB7 0xB6 JUMP XOR 0xA9 0xE PUSH4 0x8260EA7 DELEGATECALL KECCAK256 MUL 0xBE RETURN 0xC5 CALLDATACOPY DUP1 PUSH18 0xF0ABA879142B1BC164736F6C634300080F00 CALLER ",
							"sourceMap": "28:19:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 28,
									"end": 47,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 28,
									"end": 47,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 28,
									"end": 47,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 28,
									"end": 47,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 28,
									"end": 47,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 28,
									"end": 47,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 28,
									"end": 47,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 28,
									"end": 47,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 28,
									"end": 47,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 28,
									"end": 47,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 28,
									"end": 47,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 28,
									"end": 47,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 28,
									"end": 47,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 28,
									"end": 47,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 28,
									"end": 47,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 28,
									"end": 47,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 28,
									"end": 47,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 28,
									"end": 47,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 28,
									"end": 47,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 28,
									"end": 47,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 28,
									"end": 47,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122038d6b0f6b7b65618a90e6308260ea7f42002bef3c5378071f0aba879142b1bc164736f6c634300080f0033",
									".code": [
										{
											"begin": 28,
											"end": 47,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 28,
											"end": 47,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28,
											"end": 47,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28,
											"end": 47,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28,
											"end": 47,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28,
											"end": 47,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contracts/test/Test2.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/test/Test2.sol\":\"Test2\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/test/Test2.sol\":{\"keccak256\":\"0x084c37fa3a95a4cd284c8e25915a377c6e761badc128e7d6e73c2b127dc033fb\",\"urls\":[\"bzz-raw://9791223bbc5ab8d1bf9a2599d1550759f330e5a5409867111887ad00437a11fc\",\"dweb:/ipfs/Qmd89VNYNNHYnngJdzwqHTEToboxTinnmXzCoukj4PPes9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/test/Test2.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/test/Test2.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/test/Test2.sol": {
				"ast": {
					"absolutePath": "contracts/test/Test2.sol",
					"exportedSymbols": {
						"Test2": [
							2
						]
					},
					"id": 3,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Test2",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2,
							"linearizedBaseContracts": [
								2
							],
							"name": "Test2",
							"nameLocation": "37:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 3,
							"src": "28:19:0",
							"usedErrors": []
						}
					],
					"src": "0:47:0"
				},
				"id": 0
			}
		}
	}
}